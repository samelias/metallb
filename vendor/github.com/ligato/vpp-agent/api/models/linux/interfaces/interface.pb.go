// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: models/linux/interfaces/interface.proto

package linux_interfaces // import "github.com/ligato/vpp-agent/api/models/linux/interfaces"

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/gogo/protobuf/gogoproto"
import namespace "github.com/ligato/vpp-agent/api/models/linux/namespace"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

type Interface_Type int32

const (
	Interface_UNDEFINED  Interface_Type = 0
	Interface_VETH       Interface_Type = 1
	Interface_TAP_TO_VPP Interface_Type = 2
)

var Interface_Type_name = map[int32]string{
	0: "UNDEFINED",
	1: "VETH",
	2: "TAP_TO_VPP",
}
var Interface_Type_value = map[string]int32{
	"UNDEFINED":  0,
	"VETH":       1,
	"TAP_TO_VPP": 2,
}

func (x Interface_Type) String() string {
	return proto.EnumName(Interface_Type_name, int32(x))
}
func (Interface_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_interface_81e80a7dbf736c6b, []int{0, 0}
}

type VethLink_ChecksumOffloading int32

const (
	VethLink_CHKSM_OFFLOAD_DEFAULT  VethLink_ChecksumOffloading = 0
	VethLink_CHKSM_OFFLOAD_ENABLED  VethLink_ChecksumOffloading = 1
	VethLink_CHKSM_OFFLOAD_DISABLED VethLink_ChecksumOffloading = 2
)

var VethLink_ChecksumOffloading_name = map[int32]string{
	0: "CHKSM_OFFLOAD_DEFAULT",
	1: "CHKSM_OFFLOAD_ENABLED",
	2: "CHKSM_OFFLOAD_DISABLED",
}
var VethLink_ChecksumOffloading_value = map[string]int32{
	"CHKSM_OFFLOAD_DEFAULT":  0,
	"CHKSM_OFFLOAD_ENABLED":  1,
	"CHKSM_OFFLOAD_DISABLED": 2,
}

func (x VethLink_ChecksumOffloading) String() string {
	return proto.EnumName(VethLink_ChecksumOffloading_name, int32(x))
}
func (VethLink_ChecksumOffloading) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_interface_81e80a7dbf736c6b, []int{1, 0}
}

type Interface struct {
	Name        string                  `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Type        Interface_Type          `protobuf:"varint,2,opt,name=type,proto3,enum=linux.interfaces.Interface_Type" json:"type,omitempty"`
	Namespace   *namespace.NetNamespace `protobuf:"bytes,3,opt,name=namespace,proto3" json:"namespace,omitempty"`
	HostIfName  string                  `protobuf:"bytes,4,opt,name=host_if_name,json=hostIfName,proto3" json:"host_if_name,omitempty"`
	Enabled     bool                    `protobuf:"varint,5,opt,name=enabled,proto3" json:"enabled,omitempty"`
	IpAddresses []string                `protobuf:"bytes,6,rep,name=ip_addresses,json=ipAddresses,proto3" json:"ip_addresses,omitempty"`
	PhysAddress string                  `protobuf:"bytes,7,opt,name=phys_address,json=physAddress,proto3" json:"phys_address,omitempty"`
	Mtu         uint32                  `protobuf:"varint,8,opt,name=mtu,proto3" json:"mtu,omitempty"`
	// Types that are valid to be assigned to Link:
	//	*Interface_Veth
	//	*Interface_Tap
	Link                 isInterface_Link `protobuf_oneof:"link"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *Interface) Reset()         { *m = Interface{} }
func (m *Interface) String() string { return proto.CompactTextString(m) }
func (*Interface) ProtoMessage()    {}
func (*Interface) Descriptor() ([]byte, []int) {
	return fileDescriptor_interface_81e80a7dbf736c6b, []int{0}
}
func (m *Interface) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Interface.Unmarshal(m, b)
}
func (m *Interface) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Interface.Marshal(b, m, deterministic)
}
func (dst *Interface) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Interface.Merge(dst, src)
}
func (m *Interface) XXX_Size() int {
	return xxx_messageInfo_Interface.Size(m)
}
func (m *Interface) XXX_DiscardUnknown() {
	xxx_messageInfo_Interface.DiscardUnknown(m)
}

var xxx_messageInfo_Interface proto.InternalMessageInfo

type isInterface_Link interface {
	isInterface_Link()
}

type Interface_Veth struct {
	Veth *VethLink `protobuf:"bytes,20,opt,name=veth,proto3,oneof"`
}
type Interface_Tap struct {
	Tap *TapLink `protobuf:"bytes,21,opt,name=tap,proto3,oneof"`
}

func (*Interface_Veth) isInterface_Link() {}
func (*Interface_Tap) isInterface_Link()  {}

func (m *Interface) GetLink() isInterface_Link {
	if m != nil {
		return m.Link
	}
	return nil
}

func (m *Interface) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Interface) GetType() Interface_Type {
	if m != nil {
		return m.Type
	}
	return Interface_UNDEFINED
}

func (m *Interface) GetNamespace() *namespace.NetNamespace {
	if m != nil {
		return m.Namespace
	}
	return nil
}

func (m *Interface) GetHostIfName() string {
	if m != nil {
		return m.HostIfName
	}
	return ""
}

func (m *Interface) GetEnabled() bool {
	if m != nil {
		return m.Enabled
	}
	return false
}

func (m *Interface) GetIpAddresses() []string {
	if m != nil {
		return m.IpAddresses
	}
	return nil
}

func (m *Interface) GetPhysAddress() string {
	if m != nil {
		return m.PhysAddress
	}
	return ""
}

func (m *Interface) GetMtu() uint32 {
	if m != nil {
		return m.Mtu
	}
	return 0
}

func (m *Interface) GetVeth() *VethLink {
	if x, ok := m.GetLink().(*Interface_Veth); ok {
		return x.Veth
	}
	return nil
}

func (m *Interface) GetTap() *TapLink {
	if x, ok := m.GetLink().(*Interface_Tap); ok {
		return x.Tap
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Interface) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Interface_OneofMarshaler, _Interface_OneofUnmarshaler, _Interface_OneofSizer, []interface{}{
		(*Interface_Veth)(nil),
		(*Interface_Tap)(nil),
	}
}

func _Interface_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Interface)
	// link
	switch x := m.Link.(type) {
	case *Interface_Veth:
		_ = b.EncodeVarint(20<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Veth); err != nil {
			return err
		}
	case *Interface_Tap:
		_ = b.EncodeVarint(21<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Tap); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Interface.Link has unexpected type %T", x)
	}
	return nil
}

func _Interface_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Interface)
	switch tag {
	case 20: // link.veth
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(VethLink)
		err := b.DecodeMessage(msg)
		m.Link = &Interface_Veth{msg}
		return true, err
	case 21: // link.tap
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(TapLink)
		err := b.DecodeMessage(msg)
		m.Link = &Interface_Tap{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Interface_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Interface)
	// link
	switch x := m.Link.(type) {
	case *Interface_Veth:
		s := proto.Size(x.Veth)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Interface_Tap:
		s := proto.Size(x.Tap)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

func (*Interface) XXX_MessageName() string {
	return "linux.interfaces.Interface"
}

type VethLink struct {
	PeerIfName           string                      `protobuf:"bytes,1,opt,name=peer_if_name,json=peerIfName,proto3" json:"peer_if_name,omitempty"`
	RxChecksumOffloading VethLink_ChecksumOffloading `protobuf:"varint,2,opt,name=rx_checksum_offloading,json=rxChecksumOffloading,proto3,enum=linux.interfaces.VethLink_ChecksumOffloading" json:"rx_checksum_offloading,omitempty"`
	TxChecksumOffloading VethLink_ChecksumOffloading `protobuf:"varint,3,opt,name=tx_checksum_offloading,json=txChecksumOffloading,proto3,enum=linux.interfaces.VethLink_ChecksumOffloading" json:"tx_checksum_offloading,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *VethLink) Reset()         { *m = VethLink{} }
func (m *VethLink) String() string { return proto.CompactTextString(m) }
func (*VethLink) ProtoMessage()    {}
func (*VethLink) Descriptor() ([]byte, []int) {
	return fileDescriptor_interface_81e80a7dbf736c6b, []int{1}
}
func (m *VethLink) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VethLink.Unmarshal(m, b)
}
func (m *VethLink) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VethLink.Marshal(b, m, deterministic)
}
func (dst *VethLink) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VethLink.Merge(dst, src)
}
func (m *VethLink) XXX_Size() int {
	return xxx_messageInfo_VethLink.Size(m)
}
func (m *VethLink) XXX_DiscardUnknown() {
	xxx_messageInfo_VethLink.DiscardUnknown(m)
}

var xxx_messageInfo_VethLink proto.InternalMessageInfo

func (m *VethLink) GetPeerIfName() string {
	if m != nil {
		return m.PeerIfName
	}
	return ""
}

func (m *VethLink) GetRxChecksumOffloading() VethLink_ChecksumOffloading {
	if m != nil {
		return m.RxChecksumOffloading
	}
	return VethLink_CHKSM_OFFLOAD_DEFAULT
}

func (m *VethLink) GetTxChecksumOffloading() VethLink_ChecksumOffloading {
	if m != nil {
		return m.TxChecksumOffloading
	}
	return VethLink_CHKSM_OFFLOAD_DEFAULT
}

func (*VethLink) XXX_MessageName() string {
	return "linux.interfaces.VethLink"
}

type TapLink struct {
	VppTapIfName         string   `protobuf:"bytes,1,opt,name=vpp_tap_if_name,json=vppTapIfName,proto3" json:"vpp_tap_if_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TapLink) Reset()         { *m = TapLink{} }
func (m *TapLink) String() string { return proto.CompactTextString(m) }
func (*TapLink) ProtoMessage()    {}
func (*TapLink) Descriptor() ([]byte, []int) {
	return fileDescriptor_interface_81e80a7dbf736c6b, []int{2}
}
func (m *TapLink) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TapLink.Unmarshal(m, b)
}
func (m *TapLink) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TapLink.Marshal(b, m, deterministic)
}
func (dst *TapLink) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TapLink.Merge(dst, src)
}
func (m *TapLink) XXX_Size() int {
	return xxx_messageInfo_TapLink.Size(m)
}
func (m *TapLink) XXX_DiscardUnknown() {
	xxx_messageInfo_TapLink.DiscardUnknown(m)
}

var xxx_messageInfo_TapLink proto.InternalMessageInfo

func (m *TapLink) GetVppTapIfName() string {
	if m != nil {
		return m.VppTapIfName
	}
	return ""
}

func (*TapLink) XXX_MessageName() string {
	return "linux.interfaces.TapLink"
}
func init() {
	proto.RegisterType((*Interface)(nil), "linux.interfaces.Interface")
	proto.RegisterType((*VethLink)(nil), "linux.interfaces.VethLink")
	proto.RegisterType((*TapLink)(nil), "linux.interfaces.TapLink")
	proto.RegisterEnum("linux.interfaces.Interface_Type", Interface_Type_name, Interface_Type_value)
	proto.RegisterEnum("linux.interfaces.VethLink_ChecksumOffloading", VethLink_ChecksumOffloading_name, VethLink_ChecksumOffloading_value)
}

func init() {
	proto.RegisterFile("models/linux/interfaces/interface.proto", fileDescriptor_interface_81e80a7dbf736c6b)
}

var fileDescriptor_interface_81e80a7dbf736c6b = []byte{
	// 567 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x54, 0xcd, 0x6e, 0x9b, 0x4c,
	0x14, 0x0d, 0x86, 0x2f, 0xb1, 0x6f, 0x7e, 0x3e, 0x34, 0x4a, 0x22, 0x62, 0xa9, 0x15, 0xb5, 0xd4,
	0x96, 0x8d, 0x21, 0x4a, 0xbb, 0xcb, 0xca, 0x89, 0xb1, 0x6c, 0xd5, 0xc5, 0x11, 0x21, 0x59, 0x74,
	0x83, 0xc6, 0x78, 0xf8, 0x51, 0x30, 0x8c, 0x60, 0x6c, 0x25, 0x6f, 0xd7, 0x65, 0x9f, 0xa2, 0x9b,
	0xbe, 0x48, 0xc5, 0x18, 0x4c, 0x6b, 0x3b, 0x9b, 0xee, 0xee, 0x3d, 0x9c, 0x33, 0xe7, 0xce, 0xb9,
	0x1a, 0xe0, 0xe3, 0x3c, 0x9d, 0x91, 0x38, 0x37, 0xe2, 0x28, 0x59, 0x3c, 0x1b, 0x51, 0xc2, 0x48,
	0xe6, 0x63, 0x8f, 0xe4, 0x75, 0xa9, 0xd3, 0x2c, 0x65, 0x29, 0x92, 0x39, 0x43, 0xaf, 0x19, 0xed,
	0x6e, 0x10, 0xb1, 0x70, 0x31, 0xd5, 0xbd, 0x74, 0x6e, 0x04, 0x69, 0x90, 0x1a, 0x9c, 0x38, 0x5d,
	0xf8, 0xbc, 0xe3, 0x0d, 0xaf, 0x56, 0x07, 0xb4, 0x3f, 0xfc, 0xe5, 0x94, 0xe0, 0x39, 0xc9, 0x29,
	0xf6, 0x48, 0x5d, 0xad, 0x78, 0x9d, 0xef, 0x22, 0xb4, 0x46, 0x95, 0x0b, 0x42, 0x20, 0x15, 0x04,
	0x45, 0x50, 0x05, 0xad, 0x65, 0xf3, 0x1a, 0x7d, 0x06, 0x89, 0xbd, 0x50, 0xa2, 0x34, 0x54, 0x41,
	0x3b, 0xb9, 0x52, 0xf5, 0xcd, 0xc9, 0xf4, 0xb5, 0x5c, 0x77, 0x5e, 0x28, 0xb1, 0x39, 0x1b, 0x5d,
	0x43, 0x6b, 0x6d, 0xa5, 0x88, 0xaa, 0xa0, 0x1d, 0x5e, 0xbd, 0x29, 0xa5, 0xf5, 0x08, 0x16, 0x61,
	0x56, 0xd5, 0xd8, 0x35, 0x1f, 0xa9, 0x70, 0x14, 0xa6, 0x39, 0x73, 0x23, 0xdf, 0xe5, 0xe3, 0x48,
	0x7c, 0x1c, 0x28, 0xb0, 0x91, 0x5f, 0x28, 0x90, 0x02, 0x07, 0x24, 0xc1, 0xd3, 0x98, 0xcc, 0x94,
	0xff, 0x54, 0x41, 0x6b, 0xda, 0x55, 0x8b, 0xde, 0xc1, 0x51, 0x44, 0x5d, 0x3c, 0x9b, 0x65, 0x24,
	0xcf, 0x49, 0xae, 0xec, 0xab, 0xa2, 0xd6, 0xb2, 0x0f, 0x23, 0xda, 0xab, 0xa0, 0x82, 0x42, 0xc3,
	0x97, 0xbc, 0x22, 0x29, 0x07, 0xfc, 0xf8, 0xc3, 0x02, 0x2b, 0x49, 0x48, 0x06, 0x71, 0xce, 0x16,
	0x4a, 0x53, 0x15, 0xb4, 0x63, 0xbb, 0x28, 0xd1, 0x25, 0x48, 0x4b, 0xc2, 0x42, 0xe5, 0x94, 0xdf,
	0xa5, 0xbd, 0x1d, 0xc3, 0x23, 0x61, 0xe1, 0x38, 0x4a, 0x9e, 0x86, 0x7b, 0x36, 0x67, 0xa2, 0x2e,
	0x88, 0x0c, 0x53, 0xe5, 0x8c, 0x0b, 0x2e, 0xb6, 0x05, 0x0e, 0xa6, 0x25, 0xbf, 0xe0, 0x75, 0x0c,
	0x90, 0x8a, 0xfc, 0xd0, 0x31, 0xb4, 0x1e, 0xac, 0xbe, 0x39, 0x18, 0x59, 0x66, 0x5f, 0xde, 0x43,
	0x4d, 0x90, 0x1e, 0x4d, 0x67, 0x28, 0x0b, 0xe8, 0x04, 0xc0, 0xe9, 0xdd, 0xb9, 0xce, 0xc4, 0x7d,
	0xbc, 0xbb, 0x93, 0x1b, 0x37, 0xfb, 0x20, 0xc5, 0x51, 0xf2, 0xd4, 0xf9, 0xd9, 0x80, 0x66, 0x65,
	0x5e, 0x44, 0x47, 0x09, 0xc9, 0xd6, 0xd1, 0xad, 0x36, 0x09, 0x05, 0x56, 0x46, 0xe7, 0xc1, 0x79,
	0xf6, 0xec, 0x7a, 0x21, 0xf1, 0x9e, 0xf2, 0xc5, 0xdc, 0x4d, 0x7d, 0x3f, 0x4e, 0xf1, 0x2c, 0x4a,
	0x82, 0x72, 0xc3, 0xdd, 0xd7, 0xaf, 0xa6, 0xdf, 0x96, 0xaa, 0xc9, 0x5a, 0x64, 0x9f, 0x66, 0xcf,
	0xdb, 0x68, 0x61, 0xc2, 0x76, 0x9b, 0x88, 0xff, 0x64, 0xc2, 0x76, 0x98, 0x74, 0x7c, 0x40, 0x3b,
	0xac, 0x2f, 0xe0, 0xec, 0x76, 0xf8, 0xe5, 0xfe, 0xab, 0x3b, 0x19, 0x0c, 0xc6, 0x93, 0x5e, 0xdf,
	0xed, 0x9b, 0x83, 0xde, 0xc3, 0xd8, 0x91, 0xf7, 0xb6, 0x3f, 0x99, 0x56, 0xef, 0x66, 0x6c, 0xf6,
	0x65, 0x01, 0xb5, 0xe1, 0x7c, 0x43, 0x35, 0xba, 0x5f, 0x7d, 0x6b, 0x74, 0x2e, 0xe1, 0xa0, 0xdc,
	0x15, 0x7a, 0x0f, 0xff, 0x2f, 0x29, 0x75, 0x19, 0xa6, 0x1b, 0x09, 0x1f, 0x2d, 0x29, 0x75, 0x30,
	0x5d, 0x65, 0x7c, 0x63, 0xfd, 0xf8, 0xf5, 0x56, 0xf8, 0x36, 0xfc, 0xe3, 0xc9, 0xc6, 0x51, 0x80,
	0x59, 0x6a, 0x2c, 0x29, 0xed, 0xe2, 0x80, 0x24, 0xcc, 0xc0, 0x34, 0x32, 0x5e, 0xf9, 0x1b, 0x5c,
	0x73, 0xc0, 0xad, 0x81, 0xe9, 0x3e, 0x7f, 0xac, 0x9f, 0x7e, 0x07, 0x00, 0x00, 0xff, 0xff, 0x3a,
	0xc6, 0xbf, 0xc4, 0x40, 0x04, 0x00, 0x00,
}
